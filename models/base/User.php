<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "user".
 *
 * @property string $id
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property string $password
 * @property string $department_id
 * @property string $mobile
 * @property string $status
 * @property string $type
 *
 * @property \app\models\Department $department
 * @property string $aliasModel
 */
abstract class User extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const STATUS_ACTIVE = 'active';
    const STATUS_INACTIVE = 'inactive';
    const TYPE_ADMIN = 'Admin';
    const TYPE_USER = 'User';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['first_name', 'last_name', 'email', 'password', 'department_id', 'type'], 'required'],
            [['department_id'], 'integer'],
            [['status', 'type'], 'string'],
            [['first_name', 'last_name', 'email', 'password'], 'string', 'max' => 100],
            [['mobile'], 'string', 'max' => 45],
            [['email'], 'unique'],
            [['department_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Department::className(), 'targetAttribute' => ['department_id' => 'id']],
            ['status', 'in', 'range' => [
                    self::STATUS_ACTIVE,
                    self::STATUS_INACTIVE,
                ]
            ],
            ['type', 'in', 'range' => [
                    self::TYPE_ADMIN,
                    self::TYPE_USER,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'first_name' => Yii::t('models', 'First Name'),
            'last_name' => Yii::t('models', 'Last Name'),
            'email' => Yii::t('models', 'Email'),
            'password' => Yii::t('models', 'Password'),
            'department_id' => Yii::t('models', 'Department ID'),
            'mobile' => Yii::t('models', 'Mobile'),
            'status' => Yii::t('models', 'Status'),
            'type' => Yii::t('models', 'Type'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartment()
    {
        return $this->hasOne(\app\models\Department::className(), ['id' => 'department_id']);
    }




    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_ACTIVE => Yii::t('models', self::STATUS_ACTIVE),
            self::STATUS_INACTIVE => Yii::t('models', self::STATUS_INACTIVE),
        ];
    }

    /**
     * get column type enum value label
     * @param string $value
     * @return string
     */
    public static function getTypeValueLabel($value){
        $labels = self::optsType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column type ENUM value labels
     * @return array
     */
    public static function optsType()
    {
        return [
            self::TYPE_ADMIN => Yii::t('models', self::TYPE_ADMIN),
            self::TYPE_USER => Yii::t('models', self::TYPE_USER),
        ];
    }

}
